basePath: /api/v1
definitions:
  model.Bank:
    properties:
      account:
        example: me@thienhang.com
        type: string
      bank_name:
        type: string
      owner:
        type: string
    type: object
  model.ConfigData:
    properties:
      appointment_price:
        example: 30000
        type: integer
    type: object
  model.ConsultingField:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  model.DataAppointmentSchedule:
    properties:
      booking_time:
        type: string
      date:
        type: string
      employee_id:
        type: string
      id:
        type: string
      listener_id:
        type: string
      listener_image:
        type: string
      listener_name:
        type: string
      listener_role:
        type: integer
      time_slot:
        type: string
    type: object
  model.DataConversationsUser:
    properties:
      booking_time:
        type: string
      date:
        type: string
      employee_id:
        type: string
      id:
        type: string
      listener_image:
        type: string
      listener_name:
        type: string
      listener_role:
        type: integer
      status:
        type: string
      time_slot:
        type: string
    type: object
  model.DataDetailAppointmentInDay:
    properties:
      booking_time:
        type: string
      is_full:
        type: boolean
    type: object
  model.DataDetailAppointmentSchedule:
    properties:
      booking_time:
        type: string
      date:
        type: string
      diamond_discount:
        type: integer
      diamond_order:
        type: integer
      diamond_payment:
        type: integer
      employee_id:
        type: string
      listener_id:
        type: string
      listener_image:
        type: string
      listener_name:
        type: string
      listener_role:
        type: integer
      time_slot:
        type: string
    type: object
  model.DataDetailConversationUser:
    properties:
      booking_time:
        type: string
      consulting_field:
        items:
          type: string
        type: array
      date:
        type: string
      diamond_discount:
        type: integer
      diamond_order:
        type: integer
      diamond_payment:
        type: integer
      id:
        type: string
      listener_image:
        type: string
      listener_name:
        type: string
      listener_role:
        type: integer
      note_company:
        type: string
      note_listener:
        type: string
      star:
        type: integer
      time_slot:
        type: string
      tip:
        type: integer
    type: object
  model.DataGetCallHistoryListener:
    properties:
      call_id:
        type: string
      consulting_fee_listener:
        type: integer
      consulting_field:
        items:
          type: string
        type: array
      content:
        type: string
      end_call:
        type: string
      phone_number:
        type: string
      start_call:
        type: string
      status:
        type: string
      user_id:
        type: string
      username:
        type: string
    type: object
  model.DataGetCallHistoryUser:
    properties:
      call_id:
        type: string
      consulting_field:
        items:
          type: string
        type: array
      content:
        type: string
      end_call:
        type: string
      listener_id:
        type: string
      listener_name:
        type: string
      start_call:
        type: string
    type: object
  model.DataGetCouponsUser:
    properties:
      coupon_id:
        type: string
      coupon_name:
        type: string
      discount:
        type: number
      expires_at:
        type: string
      status:
        example: ACTIVE, INACTIVE, USED
        type: string
      type:
        example: cp_call_now, cp_booking_cg, cp_booking_cv
        type: string
    type: object
  model.DataGetListNotification:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      read_flag:
        type: boolean
      type:
        type: integer
    type: object
  model.DataGetListenersBookmark:
    properties:
      avatar:
        type: string
      description:
        type: string
      employee_id:
        type: string
      listener_id:
        type: string
      listener_role:
        type: integer
      name:
        type: string
      phone_number:
        type: string
      star:
        type: number
    type: object
  model.DataListenerInfo:
    properties:
      avatar:
        type: string
      description:
        type: string
      employee_id:
        type: string
      listener_id:
        type: string
      name:
        type: string
      star:
        type: number
    type: object
  model.DataScheduleWork:
    properties:
      date:
        type: string
      is_book:
        type: boolean
      time_slot:
        type: string
    type: object
  model.DataStartConversation:
    properties:
      call_id:
        example: ' bc72fg9esvbsjd240v2ihidhv9'
        type: string
      channel:
        example: "123456"
        type: string
      order_id:
        example: bc72fg9esvbsjd240v2ihidhv9
        type: string
      ringing_time:
        example: 5
        type: integer
      token:
        example: data token agora
        type: string
      uid:
        example: 343f9n39fj23fj40
        type: string
    type: object
  model.DataWorkingDay:
    properties:
      booking_time:
        type: string
      name:
        type: string
      time_slot:
        type: string
      user_id:
        type: string
    type: object
  model.GetAllUsersData:
    properties:
      diamond:
        type: integer
      id:
        type: string
      name:
        type: string
      phone_number:
        type: string
      status:
        type: string
    type: object
  model.GetAllWithdrawalHistoryData:
    properties:
      amount_money:
        type: integer
      created_at:
        type: string
      id:
        type: string
      listener_id:
        type: string
      listener_name:
        type: string
      status:
        type: string
      updated_at:
        type: string
    type: object
  model.InputBookmarkListener:
    properties:
      listener_id:
        type: string
    type: object
  model.InputCallPayment:
    properties:
      booking_time:
        type: string
      coupon_id:
        type: string
      date:
        type: string
      time_slot:
        type: string
    type: object
  model.InputChangePassword:
    properties:
      new_password:
        type: string
      password:
        type: string
    type: object
  model.InputCompleteInfo:
    properties:
      consulting_fields:
        items:
          type: string
        type: array
      name:
        example: HungDX
        type: string
      referral_code:
        example: "0335229337"
        type: string
    type: object
  model.InputConfirmWithdrawal:
    properties:
      id:
        type: string
      status:
        type: string
    type: object
  model.InputCreateListener:
    properties:
      account:
        example: me@thienhang.com
        type: string
      address:
        type: string
      avatar:
        type: string
      bank_name:
        type: string
      description:
        type: string
      dob:
        type: string
      email:
        example: me@thienhang.com
        type: string
      employee_id:
        type: string
      first_name:
        example: me@thienhang.com
        type: string
      gender:
        type: string
      last_name:
        example: me@thienhang.com
        type: string
      main_topic:
        items:
          type: string
        type: array
      owner:
        type: string
      personal_id:
        type: string
      phone_number:
        example: "0924202404"
        type: string
      price:
        type: integer
      role:
        type: integer
    type: object
  model.InputCreateNotification:
    properties:
      content:
        type: string
      receiver_id:
        type: string
      receiver_role:
        type: integer
      type:
        type: integer
    type: object
  model.InputCreateScheduleWork:
    properties:
      date:
        type: string
      employee_id:
        type: string
      time_slot:
        type: string
    type: object
  model.InputEndCall:
    properties:
      call_id:
        type: string
    type: object
  model.InputExtendCall:
    properties:
      call_id:
        type: string
    type: object
  model.InputForgotPassword:
    properties:
      phone_number:
        type: string
    type: object
  model.InputHandleMissCall:
    properties:
      call_id:
        type: string
    type: object
  model.InputJoinCall:
    properties:
      call_id:
        type: string
    type: object
  model.InputLogin:
    properties:
      password:
        type: string
      phone_number:
        type: string
    type: object
  model.InputOrderPayment:
    properties:
      booking_time:
        type: string
      coupon_id:
        type: string
      date:
        type: string
      listener_id:
        type: string
      time_slot:
        type: string
    type: object
  model.InputPaymentRefund:
    properties:
      order_id:
        type: string
      type:
        type: integer
    type: object
  model.InputReadNotification:
    properties:
      id:
        type: string
      read_all:
        type: boolean
    type: object
  model.InputRequestWithdrawal:
    properties:
      money:
        type: integer
    type: object
  model.InputResetNewPassword:
    properties:
      new_password:
        type: string
      phone_number:
        type: string
      reset_code:
        type: string
    type: object
  model.InputSendEventWebSocket:
    properties:
      event:
        type: string
      from_user_id:
        type: string
      message:
        type: string
    type: object
  model.InputSendOTPCode:
    properties:
      phone_number:
        example: "0335266678"
        type: string
    type: object
  model.InputStartCall:
    properties:
      order_id:
        type: string
    type: object
  model.InputSubmitCallEvaluation:
    properties:
      call_id:
        type: string
      note_company:
        type: string
      note_listener:
        type: string
      star:
        type: integer
      tip:
        type: integer
    type: object
  model.InputSubmitDiamond:
    properties:
      diamond:
        type: integer
      id:
        type: string
    type: object
  model.InputSubmitInfoConversation:
    properties:
      call_id:
        type: string
      consulting_field:
        items:
          type: string
        type: array
      content:
        type: string
      end_call:
        type: string
      start_call:
        type: string
    type: object
  model.InputSwitchListener:
    properties:
      order_id:
        type: string
    type: object
  model.InputToken:
    properties:
      token:
        type: string
    type: object
  model.InputTrackActionListener:
    properties:
      action:
        description: CHECK_IN, CHECK_OUT, ON_CALL, OFF_CALL
        type: string
    type: object
  model.InputUnlock:
    properties:
      booking_time:
        type: string
      date:
        type: string
      listener_id:
        type: string
    type: object
  model.InputUpdateInfo:
    properties:
      avatar:
        type: string
      consulting_fields:
        items:
          type: string
        type: array
      name:
        type: string
    type: object
  model.InputUpdateOrderPayment:
    properties:
      booking_time:
        type: string
      date:
        type: string
      listener_id:
        type: string
      order_id:
        type: string
      surcharge:
        type: integer
      time_slot:
        type: string
    type: object
  model.InputVerifyOTPCode:
    properties:
      code:
        example: "462384"
        type: string
      phone_number:
        example: "0335266678"
        type: string
    type: object
  model.InputVerifyResetPassword:
    properties:
      phone_number:
        type: string
      reset_code:
        type: string
    type: object
  model.Listener:
    properties:
      address:
        type: string
      avatar:
        type: string
      bank:
        $ref: '#/definitions/model.Bank'
      count_login_fail:
        type: integer
      created_at:
        type: string
      deleted_flag:
        type: boolean
      description:
        type: string
      dob:
        type: string
      email:
        type: string
      employee_id:
        type: string
      gender:
        type: string
      id:
        type: string
      main_topic:
        items:
          type: string
        type: array
      name:
        $ref: '#/definitions/model.Name'
      password:
        type: string
      personal_id:
        type: string
      phone_number:
        type: string
      price:
        type: integer
      refresh_token:
        type: string
      role:
        type: integer
      status:
        type: string
      updated_at:
        type: string
    type: object
  model.LoginData:
    properties:
      email:
        type: string
      id:
        type: string
      phone_number:
        type: string
      refresh_token:
        type: string
      token:
        type: string
    type: object
  model.Message:
    properties:
      content:
        type: string
      icon:
        type: string
      notification:
        type: string
      to:
        type: string
    type: object
  model.Name:
    properties:
      first_name:
        type: string
      last_name:
        type: string
    type: object
  model.ResponseAppointmentSchedule:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/model.DataAppointmentSchedule'
        type: array
      message:
        type: string
    type: object
  model.ResponseDetailAppointmentSchedule:
    properties:
      code:
        example: 200
        type: integer
      data:
        $ref: '#/definitions/model.DataDetailAppointmentSchedule'
      message:
        example: Success
        type: string
    type: object
  model.ResponseError:
    properties:
      code:
        example: 400
        type: integer
      message:
        type: string
    type: object
  model.ResponseGetAllUsers:
    properties:
      code:
        example: 200
        type: integer
      data:
        items:
          $ref: '#/definitions/model.GetAllUsersData'
        type: array
      message:
        example: Success
        type: string
    type: object
  model.ResponseGetAllWithdrawalHistory:
    properties:
      code:
        example: 200
        type: integer
      data:
        items:
          $ref: '#/definitions/model.GetAllWithdrawalHistoryData'
        type: array
      message:
        example: Success
        type: string
    type: object
  model.ResponseGetCallHistoryListener:
    properties:
      code:
        example: 200
        type: integer
      data:
        items:
          $ref: '#/definitions/model.DataGetCallHistoryListener'
        type: array
      message:
        type: string
    type: object
  model.ResponseGetCallHistoryUser:
    properties:
      code:
        example: 200
        type: integer
      data:
        items:
          $ref: '#/definitions/model.DataGetCallHistoryUser'
        type: array
      message:
        type: string
    type: object
  model.ResponseGetConfigData:
    properties:
      code:
        example: 200
        type: integer
      data:
        $ref: '#/definitions/model.ConfigData'
      message:
        example: success
        type: string
    type: object
  model.ResponseGetConsultingField:
    properties:
      code:
        example: 200
        type: integer
      data:
        items:
          $ref: '#/definitions/model.ConsultingField'
        type: array
      message:
        example: success
        type: string
    type: object
  model.ResponseGetConversationsUser:
    properties:
      code:
        example: 200
        type: integer
      data:
        items:
          $ref: '#/definitions/model.DataConversationsUser'
        type: array
      message:
        type: string
    type: object
  model.ResponseGetCouponsUser:
    properties:
      code:
        example: 200
        type: integer
      data:
        items:
          $ref: '#/definitions/model.DataGetCouponsUser'
        type: array
      message:
        example: Success
        type: string
    type: object
  model.ResponseGetDetailCallHistoryListener:
    properties:
      code:
        example: 200
        type: integer
      data:
        $ref: '#/definitions/model.DataGetCallHistoryListener'
      message:
        type: string
    type: object
  model.ResponseGetDetailConversationUser:
    properties:
      code:
        example: 200
        type: integer
      data:
        $ref: '#/definitions/model.DataDetailConversationUser'
      message:
        type: string
    type: object
  model.ResponseGetDetailScheduleWorkListener:
    properties:
      code:
        example: 200
        type: integer
      data:
        example:
        - '[00:30'
        - 01:00]
        items:
          type: string
        type: array
      message:
        example: Success
        type: string
    type: object
  model.ResponseGetInfoListener:
    properties:
      code:
        example: 200
        type: integer
      data:
        $ref: '#/definitions/model.Listener'
      message:
        example: Success
        type: string
    type: object
  model.ResponseGetListNotification:
    properties:
      code:
        example: 200
        type: integer
      data:
        items:
          $ref: '#/definitions/model.DataGetListNotification'
        type: array
      message:
        example: success
        type: string
    type: object
  model.ResponseGetListenerForBookAppointment:
    properties:
      code:
        example: 200
        type: integer
      data:
        items:
          $ref: '#/definitions/model.DataListenerInfo'
        type: array
      message:
        example: Success
        type: string
    type: object
  model.ResponseGetListenersBookmark:
    properties:
      code:
        example: 200
        type: integer
      data:
        items:
          $ref: '#/definitions/model.DataGetListenersBookmark'
        type: array
      message:
        example: Success
        type: string
    type: object
  model.ResponseGetScheduleWorkAppointment:
    properties:
      code:
        example: 200
        type: integer
      data:
        items:
          $ref: '#/definitions/model.DataDetailAppointmentInDay'
        type: array
      message:
        example: Success
        type: string
    type: object
  model.ResponseGetServerDatetime:
    properties:
      code:
        example: 200
        type: integer
      data:
        type: string
      message:
        example: success
        type: string
    type: object
  model.ResponseGetTimeSlot:
    properties:
      code:
        example: 200
        type: integer
      data:
        items:
          $ref: '#/definitions/model.TimeSlot'
        type: array
      message:
        example: success
        type: string
    type: object
  model.ResponseGetWithdrawalHistory:
    properties:
      code:
        example: 200
        type: integer
      data:
        items:
          $ref: '#/definitions/model.WithdrawalHistory'
        type: array
      message:
        example: Success
        type: string
    type: object
  model.ResponseLogin:
    properties:
      code:
        example: 200
        type: integer
      data:
        $ref: '#/definitions/model.LoginData'
      message:
        example: Success
        type: string
    type: object
  model.ResponseScheduleWork:
    properties:
      code:
        example: 200
        type: integer
      data:
        items:
          $ref: '#/definitions/model.DataScheduleWork'
        type: array
      message:
        example: Success
        type: string
    type: object
  model.ResponseSendOTPCode:
    properties:
      code:
        example: 200
        type: integer
      data:
        example: "457564"
        type: string
      message:
        example: Success
        type: string
    type: object
  model.ResponseStartConversation:
    properties:
      code:
        example: 200
        type: integer
      data:
        $ref: '#/definitions/model.DataStartConversation'
      message:
        type: string
    type: object
  model.ResponseSuccess:
    properties:
      code:
        example: 200
        type: integer
      message:
        type: string
    type: object
  model.ResponseVerifyOTPCode:
    properties:
      id:
        type: string
      is_member:
        type: boolean
      phone_number:
        type: string
      refresh_token:
        type: string
      token:
        type: string
    type: object
  model.ResponseWorkingDay:
    properties:
      code:
        example: 200
        type: integer
      data:
        items:
          $ref: '#/definitions/model.DataWorkingDay'
        type: array
      message:
        example: Success
        type: string
    type: object
  model.TimeSlot:
    properties:
      booking_time:
        items:
          type: string
        type: array
      created_at:
        type: string
      id:
        type: string
      surcharge:
        type: number
      time_slot:
        type: string
      updated_at:
        type: string
    type: object
  model.WithdrawalHistory:
    properties:
      amount_money:
        type: integer
      created_at:
        type: string
      id:
        type: string
      listener_id:
        type: string
      status:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: |-
    Có mặt trên tất cả nền tảng kỹ thuật số hàng đầu như Google Play, iOS, website. SandexCare là ứng dụng dịch vụ hỗ trợ khách hàng giải tỏa những khó khăn trong cuộc sống qua cuộc gọi 1-1 với chuyên viên lắng nghe của SandexCare, đem lại cảm hứng và động lực trong cuộc sống - công ty hàng đầu về sức khỏe tâm lý cộng đồng tại Việt Nam.
    SandexCare sẽ luôn bên bạn mọi lúc khi bạn cần nhất và hãy đến với chúng tôi để cùng nhau lan toả năng lượng tích cực cho cuộc sống để những vấn đề của chính bạn trở nên đơn giản hơn.

    Format date: "2022-01-04".
    Format time_slot: "00:00-06:00".
    Format booking_time: "01:00".
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://sandexcare.com/terms/
  title: Tài liệu đặc tả api.sandexcare.com
  version: "1.0"
paths:
  /admin/confirm-withdrawal:
    post:
      consumes:
      - application/json
      description: Admin xác nhận yêu cầu rút tiền của chuyên viên/chuyên gia!
      parameters:
      - description: Input Confirm Withdrawal
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputConfirmWithdrawal'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: API Confirm Withdrawal Request
      tags:
      - Admin
  /admin/users:
    get:
      consumes:
      - application/json
      description: Admin xem tất cả người dùng trên hệ thống.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseGetAllUsers'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: API get all user
      tags:
      - Admin
  /admin/users/submit-diamond:
    post:
      consumes:
      - application/json
      description: Admin cấp kim cương cho tài khoản user!
      parameters:
      - description: Input Submit Diamond
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputSubmitDiamond'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: API Submit Diamonds User
      tags:
      - Admin
  /admin/withdrawal-history:
    get:
      consumes:
      - application/json
      description: Admin xem tất cả yêu cầu rút tiền của cả hệ thống.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseGetAllWithdrawalHistory'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: API get all withdrawal history
      tags:
      - Admin
  /conversation/accept-extend-call:
    post:
      consumes:
      - application/json
      description: API Accept extend call of user
      parameters:
      - description: Input extend call of user
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputExtendCall'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Conversation
  /conversation/call-history/listener:
    get:
      consumes:
      - application/json
      description: Get history call of listener.
      parameters:
      - description: 'Ex: status = COMPLETED. Status of call. If there is no status
          param => get all status.'
        in: path
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseGetCallHistoryListener'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Conversation
  /conversation/call-history/listener/detail:
    get:
      consumes:
      - application/json
      description: Get detail call history of listener.
      parameters:
      - description: Call Id.
        in: path
        name: call_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseGetDetailCallHistoryListener'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Conversation
  /conversation/call-history/user:
    get:
      consumes:
      - application/json
      description: Get history call of user by token listener.
      parameters:
      - description: User Id.
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseGetCallHistoryUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Conversation
  /conversation/end-call:
    post:
      consumes:
      - application/json
      description: API user end call
      parameters:
      - description: Input end call
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputEndCall'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Conversation
  /conversation/evaluation:
    post:
      consumes:
      - application/json
      description: API user submit call evaluation
      parameters:
      - description: Input user submit call evaluation
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputSubmitCallEvaluation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Conversation
  /conversation/info-call:
    post:
      consumes:
      - application/json
      description: API listener submit information conversation
      parameters:
      - description: Input listener submit information conversation
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputSubmitInfoConversation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Conversation
  /conversation/join-call:
    post:
      consumes:
      - application/json
      description: API listener join call
      parameters:
      - description: Input listener join call
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputJoinCall'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Conversation
  /conversation/request-extend-call:
    post:
      consumes:
      - application/json
      description: Listener request extend call to user.
      parameters:
      - description: Input send request extend call to user
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputExtendCall'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Conversation
  /conversation/start-call:
    post:
      consumes:
      - application/json
      description: API user start call of appointment booked
      parameters:
      - description: Input start call
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputStartCall'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseStartConversation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Conversation
  /conversation/start-call/expert:
    post:
      consumes:
      - application/json
      description: API bắt đầu cuộc gọi với chuyên gia
      parameters:
      - description: Input start call
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputStartCall'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseStartConversation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Conversation
  /conversation/switch-listener:
    post:
      consumes:
      - application/json
      description: API user switch listener
      parameters:
      - description: Input user switch listener
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputSwitchListener'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Conversation
  /conversation/user:
    get:
      consumes:
      - application/json
      description: Get list conversation history of user.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseGetConversationsUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Conversation
  /conversation/user/detail:
    get:
      consumes:
      - application/json
      description: Get detail info conversation history of user by id.
      parameters:
      - description: Call Id.
        in: path
        name: call_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseGetDetailConversationUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Conversation
  /firebase/register:
    post:
      consumes:
      - application/json
      description: Register Device Token - Đăng kí token device
      parameters:
      - description: Token lấy từ API authen có prefix Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Token của người dùng lấy từ firebase, khi gọi lại API này, token
          cũ sẽ bị ghi đè (Xoá vĩnh viễn)
        in: body
        name: Token
        schema:
          $ref: '#/definitions/model.InputToken'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Firebase
  /firebase/send:
    post:
      consumes:
      - application/json
      description: Send Background Notification By Firebase Service -  Gửi tin nhắn
        khi ngoại tuyến và trực tuyến
      parameters:
      - description: 'Message: Tin nhắn gồm tựa đề, nội dung, hình ảnh và token của
          người gửi'
        in: body
        name: Message
        schema:
          $ref: '#/definitions/model.Message'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Firebase
  /firebase/send/{uuid}:
    post:
      consumes:
      - application/json
      description: 'Send Background Notification By Firebase Service BY UUID (TODO:
        Cần token service to service) -  Gửi tin nhắn khi ngoại tuyến và trực tuyến'
      parameters:
      - description: UUID của user
        in: path
        name: uuid
        type: string
      - description: 'Message: Tin nhắn gồm tựa đề, nội dung, hình ảnh và token của
          người gửi'
        in: body
        name: Message
        schema:
          $ref: '#/definitions/model.Message'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Firebase
  /health/ping:
    get:
      consumes:
      - application/json
      description: If the check does not return the expected response, it means that
        the process is unhealthy or dead and should be replaced as soon as possible.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: returns the liveness of a microservice.
      tags:
      - Monitor
  /listener/change-password:
    post:
      consumes:
      - application/json
      description: Xử lý thay đổi mật khẩu!
      parameters:
      - description: Input Change Password
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputChangePassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: API change password
      tags:
      - Listener
  /listener/create:
    post:
      consumes:
      - application/json
      description: Xử lý tạo account chuyên viên và chuyên gia!
      parameters:
      - description: Add InputCreateListener
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputCreateListener'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Create account listener
      tags:
      - Listener
  /listener/forgot-password:
    post:
      consumes:
      - application/json
      description: Xử lý quên mật khẩu!
      parameters:
      - description: Input Forgot Password
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputForgotPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: API forgot password
      tags:
      - Listener
  /listener/info:
    get:
      consumes:
      - application/json
      description: Xử lý lấy thông tin của chuyên viên/chuyên gia bằng token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseGetInfoListener'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: API get listener info
      tags:
      - Listener
  /listener/login:
    post:
      consumes:
      - application/json
      description: Xử lý chuyên viên/chuyên gia đăng nhập!
      parameters:
      - description: Input handle login
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseLogin'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: API login
      tags:
      - Listener
  /listener/login2:
    post:
      consumes:
      - application/json
      description: Xử lý chuyên viên/chuyên gia đăng nhập!
      parameters:
      - description: Input handle login
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseLogin'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: API login V2
      tags:
      - Listener
  /listener/logout:
    post:
      consumes:
      - application/json
      description: Xử lý đăng xuất!
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: API Logout
      tags:
      - Listener
  /listener/miss-call:
    post:
      consumes:
      - application/json
      description: Xử lý chuyên viên/chuyên gia không bắt máy!
      parameters:
      - description: Input Handle Miss Call
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputHandleMissCall'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: API handle miss call
      tags:
      - Listener
  /listener/request-withdrawal:
    post:
      consumes:
      - application/json
      description: Xử lý gửi yều cầu rút tiền!
      parameters:
      - description: Input Request Withdrawal
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputRequestWithdrawal'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: API Yêu cầu rút tiền
      tags:
      - Listener
  /listener/resend-forgot-password:
    post:
      consumes:
      - application/json
      description: Xử lý gửi lại quên mật khẩu!
      parameters:
      - description: Input Forgot Password
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputForgotPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: API resend forgot password
      tags:
      - Listener
  /listener/reset-new-password:
    post:
      consumes:
      - application/json
      description: Xử lý đặt lại mật khẩu mới!
      parameters:
      - description: Input Reset New Password
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputResetNewPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: API reset new password
      tags:
      - Listener
  /listener/revenue-analysis:
    get:
      consumes:
      - application/json
      description: Phân tích doanh số, tổng số cuôc gọi,...
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseGetWithdrawalHistory'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: API Get Revenue Analysis
      tags:
      - Listener
  /listener/verify-reset-password:
    post:
      consumes:
      - application/json
      description: Xử lý xác nhận đặt lại mật khẩu!
      parameters:
      - description: Input Verify Reset Password
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputVerifyResetPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: API verify reset password
      tags:
      - Listener
  /listener/verify-token:
    get:
      consumes:
      - application/json
      description: API Verify Token
      parameters:
      - description: 'Refresh Token: Prefix Token xxxxxx'
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseVerifyOTPCode'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Listener
  /listener/withdrawal-history:
    get:
      consumes:
      - application/json
      description: Xử lý lấy lịch xử yêu cầu rút tiền
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseGetWithdrawalHistory'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: API get withdrawal history
      tags:
      - Listener
  /master/config:
    get:
      consumes:
      - application/json
      description: API get config data
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseGetConfigData'
      tags:
      - Master
  /master/consulting-field:
    get:
      consumes:
      - application/json
      description: API get consulting field data
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseGetConsultingField'
      tags:
      - Master
  /master/datetime:
    get:
      consumes:
      - application/json
      description: API get server datetime
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseGetServerDatetime'
      tags:
      - Master
  /master/send-event-ws:
    post:
      consumes:
      - application/json
      description: Xử lý gửi tin nhắn đến 1 người qua websocket!
      parameters:
      - description: Input Send Event Web Socket
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputSendEventWebSocket'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: API send message event web socket
      tags:
      - Master
  /master/time-slot:
    get:
      consumes:
      - application/json
      description: API get time slot data
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseGetTimeSlot'
      tags:
      - Master
  /notification:
    get:
      consumes:
      - application/json
      description: API Get list notify of user token.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseGetListNotification'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Notification
    post:
      consumes:
      - application/json
      description: API tạo thống báo.
      parameters:
      - description: Input Create Notification
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputCreateNotification'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Create Notification
      tags:
      - Notification
  /notification/read:
    post:
      consumes:
      - application/json
      description: API Read notify
      parameters:
      - description: Input read notify
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputReadNotification'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Notification
  /payment:
    post:
      consumes:
      - application/json
      description: API payment order appointment
      parameters:
      - description: Input payment order appointment
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputOrderPayment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Payment
  /payment/booking-expert:
    post:
      consumes:
      - application/json
      description: API thanh toán đặt lịch chuyên gia
      parameters:
      - description: Input payment order appointment
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputOrderPayment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Payment
  /payment/call:
    post:
      consumes:
      - application/json
      description: API call payment
      parameters:
      - description: Input call payment
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputCallPayment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Payment
  /payment/refund:
    post:
      consumes:
      - application/json
      description: API hoàn tiền chuyên viên. type = 2 chuyên viên không nghe máy.
        Tất cả trường hợp khác type = 1.
      parameters:
      - description: Input request payment refund
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputPaymentRefund'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Payment
  /payment/refund-expert:
    post:
      consumes:
      - application/json
      description: API hoàn tiền chuyên gia. type = 2 chuyên gia không nghe máy. Tất
        cả trường hợp khác type = 1.
      parameters:
      - description: Input request payment refund for experts
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputPaymentRefund'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Payment
  /payment/unlock:
    post:
      consumes:
      - application/json
      description: API user unlock listener when payment fail
      parameters:
      - description: Input unlock listener
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputUnlock'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Payment
  /payment/update:
    post:
      consumes:
      - application/json
      description: API update info appointment
      parameters:
      - description: Input update appointment
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputUpdateOrderPayment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Payment
  /schedule-work:
    get:
      consumes:
      - application/json
      description: API Get schedule work for listener.
      parameters:
      - description: Start date
        format: string
        in: path
        name: start_date
        required: true
        type: string
      - description: End date
        format: string
        in: path
        name: end_date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseScheduleWork'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Schedule
  /schedule-work/appointment:
    get:
      consumes:
      - application/json
      description: API Get schedule work in day for listener.
      parameters:
      - description: Day
        format: string
        in: path
        name: day
        required: true
        type: string
      - description: Time slot
        format: string
        in: path
        name: time_slot
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseGetScheduleWorkAppointment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Schedule
  /schedule-work/appointment/listener:
    get:
      consumes:
      - application/json
      description: API Get listener to book appointment.
      parameters:
      - description: Day
        format: string
        in: path
        name: day
        required: true
        type: string
      - description: Time Slot
        format: string
        in: path
        name: time_slot
        required: true
        type: string
      - description: Booking time of user
        format: string
        in: path
        name: booking_time
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseGetListenerForBookAppointment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Schedule
  /schedule-work/create:
    post:
      consumes:
      - application/json
      description: API Create schedule work for listener
      parameters:
      - description: Input create schedule for listener
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputCreateScheduleWork'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Schedule
  /schedule-work/day:
    get:
      consumes:
      - application/json
      description: API Get schedule work in day for listener.
      parameters:
      - description: Day
        format: string
        in: path
        name: day
        required: true
        type: string
      - description: 'Time Slot - epx: 00:00-06:00 '
        format: string
        in: path
        name: time_slot
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseWorkingDay'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Schedule
  /schedule-work/detail-date/listener:
    get:
      consumes:
      - application/json
      description: API Get schedule work in day for listener.
      parameters:
      - description: Day
        format: string
        in: path
        name: day
        required: true
        type: string
      - description: Listener Id
        format: string
        in: path
        name: listener_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseGetDetailScheduleWorkListener'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Schedule
  /track-event/listener/action:
    post:
      consumes:
      - application/json
      description: API Tracking Action Listener
      parameters:
      - description: Input tracking action of listener
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputTrackActionListener'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - Track Event
  /user/appointment-schedule:
    get:
      consumes:
      - application/json
      description: Get schedule an upcoming appointment of user!
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseAppointmentSchedule'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - User
  /user/appointment-schedule/detail:
    get:
      consumes:
      - application/json
      description: Get detail schedule an upcoming appointment of user!
      parameters:
      - description: Appoinment Id.
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseDetailAppointmentSchedule'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - User
  /user/complete-info:
    post:
      consumes:
      - application/json
      description: API User complete info
      parameters:
      - description: Input complete info for user
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputCompleteInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - User
  /user/coupons:
    get:
      consumes:
      - application/json
      description: API get user's coupons
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseGetCouponsUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - User
  /user/info:
    get:
      consumes:
      - application/json
      description: API get info by token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - User
  /user/listeners-bookmark:
    delete:
      consumes:
      - application/json
      description: API delete listener bookmark of user
      parameters:
      - description: Listener ID.
        in: path
        name: listener_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - User
    get:
      consumes:
      - application/json
      description: API get listeners user's bookmark
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseGetListenersBookmark'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - User
    post:
      consumes:
      - application/json
      description: API handle user bookmark listener
      parameters:
      - description: Input user bookmark listener
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputBookmarkListener'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - User
  /user/resend-otp-code:
    post:
      consumes:
      - application/json
      description: API Resend OTP Code
      parameters:
      - description: Input resend OTP code
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputSendOTPCode'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSendOTPCode'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - User
  /user/send-otp-code:
    post:
      consumes:
      - application/json
      description: API Send OTP Code
      parameters:
      - description: Input Send OTP code
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputSendOTPCode'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSendOTPCode'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - User
  /user/update-info:
    post:
      consumes:
      - application/json
      description: API update complete info of user
      parameters:
      - description: Input update info for user
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputUpdateInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - User
  /user/verify-otp-code:
    post:
      consumes:
      - application/json
      description: API Verify OTP Code
      parameters:
      - description: Input Verify OTP code
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputVerifyOTPCode'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseVerifyOTPCode'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - User
  /user/verify-otp-code2:
    post:
      consumes:
      - application/json
      description: API Verify OTP Code V2
      parameters:
      - description: Input Verify OTP code
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.InputVerifyOTPCode'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseVerifyOTPCode'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - User
  /user/verify-token:
    get:
      consumes:
      - application/json
      description: API Verify Token
      parameters:
      - description: 'Refresh Token: Prefix Token xxxxxx'
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseVerifyOTPCode'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/model.ResponseError'
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
