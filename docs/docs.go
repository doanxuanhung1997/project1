// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://sandexcare.com/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/confirm-withdrawal": {
            "post": {
                "description": "Admin xác nhận yêu cầu rút tiền của chuyên viên/chuyên gia!",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "API Confirm Withdrawal Request",
                "parameters": [
                    {
                        "description": "Input Confirm Withdrawal",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputConfirmWithdrawal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/admin/users": {
            "get": {
                "description": "Admin xem tất cả người dùng trên hệ thống.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "API get all user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseGetAllUsers"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/admin/users/submit-diamond": {
            "post": {
                "description": "Admin cấp kim cương cho tài khoản user!",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "API Submit Diamonds User",
                "parameters": [
                    {
                        "description": "Input Submit Diamond",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputSubmitDiamond"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/admin/withdrawal-history": {
            "get": {
                "description": "Admin xem tất cả yêu cầu rút tiền của cả hệ thống.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "API get all withdrawal history",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseGetAllWithdrawalHistory"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/conversation/accept-extend-call": {
            "post": {
                "description": "API Accept extend call of user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Conversation"
                ],
                "parameters": [
                    {
                        "description": "Input extend call of user",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputExtendCall"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/conversation/call-history/listener": {
            "get": {
                "description": "Get history call of listener.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Conversation"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ex: status = COMPLETED. Status of call. If there is no status param =\u003e get all status.",
                        "name": "status",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseGetCallHistoryListener"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/conversation/call-history/listener/detail": {
            "get": {
                "description": "Get detail call history of listener.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Conversation"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Call Id.",
                        "name": "call_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseGetDetailCallHistoryListener"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/conversation/call-history/user": {
            "get": {
                "description": "Get history call of user by token listener.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Conversation"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Id.",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseGetCallHistoryUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/conversation/end-call": {
            "post": {
                "description": "API user end call",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Conversation"
                ],
                "parameters": [
                    {
                        "description": "Input end call",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputEndCall"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/conversation/evaluation": {
            "post": {
                "description": "API user submit call evaluation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Conversation"
                ],
                "parameters": [
                    {
                        "description": "Input user submit call evaluation",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputSubmitCallEvaluation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/conversation/info-call": {
            "post": {
                "description": "API listener submit information conversation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Conversation"
                ],
                "parameters": [
                    {
                        "description": "Input listener submit information conversation",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputSubmitInfoConversation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/conversation/join-call": {
            "post": {
                "description": "API listener join call",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Conversation"
                ],
                "parameters": [
                    {
                        "description": "Input listener join call",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputJoinCall"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/conversation/request-extend-call": {
            "post": {
                "description": "Listener request extend call to user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Conversation"
                ],
                "parameters": [
                    {
                        "description": "Input send request extend call to user",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputExtendCall"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/conversation/start-call": {
            "post": {
                "description": "API user start call of appointment booked",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Conversation"
                ],
                "parameters": [
                    {
                        "description": "Input start call",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputStartCall"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseStartConversation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/conversation/start-call/expert": {
            "post": {
                "description": "API bắt đầu cuộc gọi với chuyên gia",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Conversation"
                ],
                "parameters": [
                    {
                        "description": "Input start call",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputStartCall"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseStartConversation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/conversation/switch-listener": {
            "post": {
                "description": "API user switch listener",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Conversation"
                ],
                "parameters": [
                    {
                        "description": "Input user switch listener",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputSwitchListener"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/conversation/user": {
            "get": {
                "description": "Get list conversation history of user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Conversation"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseGetConversationsUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/conversation/user/detail": {
            "get": {
                "description": "Get detail info conversation history of user by id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Conversation"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Call Id.",
                        "name": "call_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseGetDetailConversationUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/firebase/register": {
            "post": {
                "description": "Register Device Token - Đăng kí token device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Firebase"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token lấy từ API authen có prefix Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Token của người dùng lấy từ firebase, khi gọi lại API này, token cũ sẽ bị ghi đè (Xoá vĩnh viễn)",
                        "name": "Token",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/model.InputToken"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/firebase/send": {
            "post": {
                "description": "Send Background Notification By Firebase Service -  Gửi tin nhắn khi ngoại tuyến và trực tuyến",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Firebase"
                ],
                "parameters": [
                    {
                        "description": "Message: Tin nhắn gồm tựa đề, nội dung, hình ảnh và token của người gửi",
                        "name": "Message",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/model.Message"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/firebase/send/{uuid}": {
            "post": {
                "description": "Send Background Notification By Firebase Service BY UUID (TODO: Cần token service to service) -  Gửi tin nhắn khi ngoại tuyến và trực tuyến",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Firebase"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID của user",
                        "name": "uuid",
                        "in": "path"
                    },
                    {
                        "description": "Message: Tin nhắn gồm tựa đề, nội dung, hình ảnh và token của người gửi",
                        "name": "Message",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/model.Message"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/health/ping": {
            "get": {
                "description": "If the check does not return the expected response, it means that the process is unhealthy or dead and should be replaced as soon as possible.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Monitor"
                ],
                "summary": "returns the liveness of a microservice.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/listener/change-password": {
            "post": {
                "description": "Xử lý thay đổi mật khẩu!",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listener"
                ],
                "summary": "API change password",
                "parameters": [
                    {
                        "description": "Input Change Password",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputChangePassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/listener/create": {
            "post": {
                "description": "Xử lý tạo account chuyên viên và chuyên gia!",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listener"
                ],
                "summary": "Create account listener",
                "parameters": [
                    {
                        "description": "Add InputCreateListener",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputCreateListener"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/listener/forgot-password": {
            "post": {
                "description": "Xử lý quên mật khẩu!",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listener"
                ],
                "summary": "API forgot password",
                "parameters": [
                    {
                        "description": "Input Forgot Password",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputForgotPassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/listener/info": {
            "get": {
                "description": "Xử lý lấy thông tin của chuyên viên/chuyên gia bằng token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listener"
                ],
                "summary": "API get listener info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseGetInfoListener"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/listener/login": {
            "post": {
                "description": "Xử lý chuyên viên/chuyên gia đăng nhập!",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listener"
                ],
                "summary": "API login",
                "parameters": [
                    {
                        "description": "Input handle login",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseLogin"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/listener/login2": {
            "post": {
                "description": "Xử lý chuyên viên/chuyên gia đăng nhập!",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listener"
                ],
                "summary": "API login V2",
                "parameters": [
                    {
                        "description": "Input handle login",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseLogin"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/listener/logout": {
            "post": {
                "description": "Xử lý đăng xuất!",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listener"
                ],
                "summary": "API Logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/listener/miss-call": {
            "post": {
                "description": "Xử lý chuyên viên/chuyên gia không bắt máy!",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listener"
                ],
                "summary": "API handle miss call",
                "parameters": [
                    {
                        "description": "Input Handle Miss Call",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputHandleMissCall"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/listener/request-withdrawal": {
            "post": {
                "description": "Xử lý gửi yều cầu rút tiền!",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listener"
                ],
                "summary": "API Yêu cầu rút tiền",
                "parameters": [
                    {
                        "description": "Input Request Withdrawal",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputRequestWithdrawal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/listener/resend-forgot-password": {
            "post": {
                "description": "Xử lý gửi lại quên mật khẩu!",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listener"
                ],
                "summary": "API resend forgot password",
                "parameters": [
                    {
                        "description": "Input Forgot Password",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputForgotPassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/listener/reset-new-password": {
            "post": {
                "description": "Xử lý đặt lại mật khẩu mới!",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listener"
                ],
                "summary": "API reset new password",
                "parameters": [
                    {
                        "description": "Input Reset New Password",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputResetNewPassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/listener/revenue-analysis": {
            "get": {
                "description": "Phân tích doanh số, tổng số cuôc gọi,...",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listener"
                ],
                "summary": "API Get Revenue Analysis",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseGetWithdrawalHistory"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/listener/verify-reset-password": {
            "post": {
                "description": "Xử lý xác nhận đặt lại mật khẩu!",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listener"
                ],
                "summary": "API verify reset password",
                "parameters": [
                    {
                        "description": "Input Verify Reset Password",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputVerifyResetPassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/listener/verify-token": {
            "get": {
                "description": "API Verify Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listener"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Refresh Token: Prefix Token xxxxxx",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseVerifyOTPCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/listener/withdrawal-history": {
            "get": {
                "description": "Xử lý lấy lịch xử yêu cầu rút tiền",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listener"
                ],
                "summary": "API get withdrawal history",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseGetWithdrawalHistory"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/master/config": {
            "get": {
                "description": "API get config data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Master"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseGetConfigData"
                        }
                    }
                }
            }
        },
        "/master/consulting-field": {
            "get": {
                "description": "API get consulting field data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Master"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseGetConsultingField"
                        }
                    }
                }
            }
        },
        "/master/datetime": {
            "get": {
                "description": "API get server datetime",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Master"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseGetServerDatetime"
                        }
                    }
                }
            }
        },
        "/master/send-event-ws": {
            "post": {
                "description": "Xử lý gửi tin nhắn đến 1 người qua websocket!",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Master"
                ],
                "summary": "API send message event web socket",
                "parameters": [
                    {
                        "description": "Input Send Event Web Socket",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputSendEventWebSocket"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/master/time-slot": {
            "get": {
                "description": "API get time slot data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Master"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseGetTimeSlot"
                        }
                    }
                }
            }
        },
        "/notification": {
            "get": {
                "description": "API Get list notify of user token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseGetListNotification"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            },
            "post": {
                "description": "API tạo thống báo.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Create Notification",
                "parameters": [
                    {
                        "description": "Input Create Notification",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputCreateNotification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/notification/read": {
            "post": {
                "description": "API Read notify",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "parameters": [
                    {
                        "description": "Input read notify",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputReadNotification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/payment": {
            "post": {
                "description": "API payment order appointment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "parameters": [
                    {
                        "description": "Input payment order appointment",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputOrderPayment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/payment/booking-expert": {
            "post": {
                "description": "API thanh toán đặt lịch chuyên gia",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "parameters": [
                    {
                        "description": "Input payment order appointment",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputOrderPayment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/payment/call": {
            "post": {
                "description": "API call payment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "parameters": [
                    {
                        "description": "Input call payment",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputCallPayment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/payment/refund": {
            "post": {
                "description": "API hoàn tiền chuyên viên. type = 2 chuyên viên không nghe máy. Tất cả trường hợp khác type = 1.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "parameters": [
                    {
                        "description": "Input request payment refund",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputPaymentRefund"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/payment/refund-expert": {
            "post": {
                "description": "API hoàn tiền chuyên gia. type = 2 chuyên gia không nghe máy. Tất cả trường hợp khác type = 1.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "parameters": [
                    {
                        "description": "Input request payment refund for experts",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputPaymentRefund"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/payment/unlock": {
            "post": {
                "description": "API user unlock listener when payment fail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "parameters": [
                    {
                        "description": "Input unlock listener",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputUnlock"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/payment/update": {
            "post": {
                "description": "API update info appointment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "parameters": [
                    {
                        "description": "Input update appointment",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputUpdateOrderPayment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/schedule-work": {
            "get": {
                "description": "API Get schedule work for listener.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedule"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "format": "string",
                        "description": "Start date",
                        "name": "start_date",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "End date",
                        "name": "end_date",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseScheduleWork"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/schedule-work/appointment": {
            "get": {
                "description": "API Get schedule work in day for listener.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedule"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "format": "string",
                        "description": "Day",
                        "name": "day",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "Time slot",
                        "name": "time_slot",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseGetScheduleWorkAppointment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/schedule-work/appointment/listener": {
            "get": {
                "description": "API Get listener to book appointment.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedule"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "format": "string",
                        "description": "Day",
                        "name": "day",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "Time Slot",
                        "name": "time_slot",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "Booking time of user",
                        "name": "booking_time",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseGetListenerForBookAppointment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/schedule-work/create": {
            "post": {
                "description": "API Create schedule work for listener",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedule"
                ],
                "parameters": [
                    {
                        "description": "Input create schedule for listener",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputCreateScheduleWork"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/schedule-work/day": {
            "get": {
                "description": "API Get schedule work in day for listener.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedule"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "format": "string",
                        "description": "Day",
                        "name": "day",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "Time Slot - epx: 00:00-06:00 ",
                        "name": "time_slot",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseWorkingDay"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/schedule-work/detail-date/listener": {
            "get": {
                "description": "API Get schedule work in day for listener.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedule"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "format": "string",
                        "description": "Day",
                        "name": "day",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "Listener Id",
                        "name": "listener_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseGetDetailScheduleWorkListener"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/track-event/listener/action": {
            "post": {
                "description": "API Tracking Action Listener",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Track Event"
                ],
                "parameters": [
                    {
                        "description": "Input tracking action of listener",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputTrackActionListener"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/user/appointment-schedule": {
            "get": {
                "description": "Get schedule an upcoming appointment of user!",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseAppointmentSchedule"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/user/appointment-schedule/detail": {
            "get": {
                "description": "Get detail schedule an upcoming appointment of user!",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Appoinment Id.",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseDetailAppointmentSchedule"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/user/complete-info": {
            "post": {
                "description": "API User complete info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "description": "Input complete info for user",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputCompleteInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/user/coupons": {
            "get": {
                "description": "API get user's coupons",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseGetCouponsUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/user/info": {
            "get": {
                "description": "API get info by token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/user/listeners-bookmark": {
            "get": {
                "description": "API get listeners user's bookmark",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseGetListenersBookmark"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            },
            "post": {
                "description": "API handle user bookmark listener",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "description": "Input user bookmark listener",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputBookmarkListener"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            },
            "delete": {
                "description": "API delete listener bookmark of user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Listener ID.",
                        "name": "listener_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/user/resend-otp-code": {
            "post": {
                "description": "API Resend OTP Code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "description": "Input resend OTP code",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputSendOTPCode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSendOTPCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/user/send-otp-code": {
            "post": {
                "description": "API Send OTP Code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "description": "Input Send OTP code",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputSendOTPCode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSendOTPCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/user/update-info": {
            "post": {
                "description": "API update complete info of user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "description": "Input update info for user",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputUpdateInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/user/verify-otp-code": {
            "post": {
                "description": "API Verify OTP Code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "description": "Input Verify OTP code",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputVerifyOTPCode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseVerifyOTPCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/user/verify-otp-code2": {
            "post": {
                "description": "API Verify OTP Code V2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "description": "Input Verify OTP code",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InputVerifyOTPCode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseVerifyOTPCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/user/verify-token": {
            "get": {
                "description": "API Verify Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Refresh Token: Prefix Token xxxxxx",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseVerifyOTPCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Bank": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string",
                    "example": "me@thienhang.com"
                },
                "bank_name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                }
            }
        },
        "model.ConfigData": {
            "type": "object",
            "properties": {
                "appointment_price": {
                    "type": "integer",
                    "example": 30000
                }
            }
        },
        "model.ConsultingField": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.DataAppointmentSchedule": {
            "type": "object",
            "properties": {
                "booking_time": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "listener_id": {
                    "type": "string"
                },
                "listener_image": {
                    "type": "string"
                },
                "listener_name": {
                    "type": "string"
                },
                "listener_role": {
                    "type": "integer"
                },
                "time_slot": {
                    "type": "string"
                }
            }
        },
        "model.DataConversationsUser": {
            "type": "object",
            "properties": {
                "booking_time": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "listener_image": {
                    "type": "string"
                },
                "listener_name": {
                    "type": "string"
                },
                "listener_role": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "time_slot": {
                    "type": "string"
                }
            }
        },
        "model.DataDetailAppointmentInDay": {
            "type": "object",
            "properties": {
                "booking_time": {
                    "type": "string"
                },
                "is_full": {
                    "type": "boolean"
                }
            }
        },
        "model.DataDetailAppointmentSchedule": {
            "type": "object",
            "properties": {
                "booking_time": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "diamond_discount": {
                    "type": "integer"
                },
                "diamond_order": {
                    "type": "integer"
                },
                "diamond_payment": {
                    "type": "integer"
                },
                "employee_id": {
                    "type": "string"
                },
                "listener_id": {
                    "type": "string"
                },
                "listener_image": {
                    "type": "string"
                },
                "listener_name": {
                    "type": "string"
                },
                "listener_role": {
                    "type": "integer"
                },
                "time_slot": {
                    "type": "string"
                }
            }
        },
        "model.DataDetailConversationUser": {
            "type": "object",
            "properties": {
                "booking_time": {
                    "type": "string"
                },
                "consulting_field": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "date": {
                    "type": "string"
                },
                "diamond_discount": {
                    "type": "integer"
                },
                "diamond_order": {
                    "type": "integer"
                },
                "diamond_payment": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "listener_image": {
                    "type": "string"
                },
                "listener_name": {
                    "type": "string"
                },
                "listener_role": {
                    "type": "integer"
                },
                "note_company": {
                    "type": "string"
                },
                "note_listener": {
                    "type": "string"
                },
                "star": {
                    "type": "integer"
                },
                "time_slot": {
                    "type": "string"
                },
                "tip": {
                    "type": "integer"
                }
            }
        },
        "model.DataGetCallHistoryListener": {
            "type": "object",
            "properties": {
                "call_id": {
                    "type": "string"
                },
                "consulting_fee_listener": {
                    "type": "integer"
                },
                "consulting_field": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "content": {
                    "type": "string"
                },
                "end_call": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "start_call": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.DataGetCallHistoryUser": {
            "type": "object",
            "properties": {
                "call_id": {
                    "type": "string"
                },
                "consulting_field": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "content": {
                    "type": "string"
                },
                "end_call": {
                    "type": "string"
                },
                "listener_id": {
                    "type": "string"
                },
                "listener_name": {
                    "type": "string"
                },
                "start_call": {
                    "type": "string"
                }
            }
        },
        "model.DataGetCouponsUser": {
            "type": "object",
            "properties": {
                "coupon_id": {
                    "type": "string"
                },
                "coupon_name": {
                    "type": "string"
                },
                "discount": {
                    "type": "number"
                },
                "expires_at": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "example": "ACTIVE, INACTIVE, USED"
                },
                "type": {
                    "type": "string",
                    "example": "cp_call_now, cp_booking_cg, cp_booking_cv"
                }
            }
        },
        "model.DataGetListNotification": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "read_flag": {
                    "type": "boolean"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "model.DataGetListenersBookmark": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "string"
                },
                "listener_id": {
                    "type": "string"
                },
                "listener_role": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "star": {
                    "type": "number"
                }
            }
        },
        "model.DataListenerInfo": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "string"
                },
                "listener_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "star": {
                    "type": "number"
                }
            }
        },
        "model.DataScheduleWork": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "is_book": {
                    "type": "boolean"
                },
                "time_slot": {
                    "type": "string"
                }
            }
        },
        "model.DataStartConversation": {
            "type": "object",
            "properties": {
                "call_id": {
                    "type": "string",
                    "example": " bc72fg9esvbsjd240v2ihidhv9"
                },
                "channel": {
                    "type": "string",
                    "example": "123456"
                },
                "order_id": {
                    "type": "string",
                    "example": "bc72fg9esvbsjd240v2ihidhv9"
                },
                "ringing_time": {
                    "type": "integer",
                    "example": 5
                },
                "token": {
                    "type": "string",
                    "example": "data token agora"
                },
                "uid": {
                    "type": "string",
                    "example": "343f9n39fj23fj40"
                }
            }
        },
        "model.DataWorkingDay": {
            "type": "object",
            "properties": {
                "booking_time": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "time_slot": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.GetAllUsersData": {
            "type": "object",
            "properties": {
                "diamond": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.GetAllWithdrawalHistoryData": {
            "type": "object",
            "properties": {
                "amount_money": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "listener_id": {
                    "type": "string"
                },
                "listener_name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.InputBookmarkListener": {
            "type": "object",
            "properties": {
                "listener_id": {
                    "type": "string"
                }
            }
        },
        "model.InputCallPayment": {
            "type": "object",
            "properties": {
                "booking_time": {
                    "type": "string"
                },
                "coupon_id": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "time_slot": {
                    "type": "string"
                }
            }
        },
        "model.InputChangePassword": {
            "type": "object",
            "properties": {
                "new_password": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "model.InputCompleteInfo": {
            "type": "object",
            "properties": {
                "consulting_fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "HungDX"
                },
                "referral_code": {
                    "type": "string",
                    "example": "0335229337"
                }
            }
        },
        "model.InputConfirmWithdrawal": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.InputCreateListener": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string",
                    "example": "me@thienhang.com"
                },
                "address": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "bank_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dob": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "example": "me@thienhang.com"
                },
                "employee_id": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string",
                    "example": "me@thienhang.com"
                },
                "gender": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string",
                    "example": "me@thienhang.com"
                },
                "main_topic": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "owner": {
                    "type": "string"
                },
                "personal_id": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string",
                    "example": "0924202404"
                },
                "price": {
                    "type": "integer"
                },
                "role": {
                    "type": "integer"
                }
            }
        },
        "model.InputCreateNotification": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "receiver_id": {
                    "type": "string"
                },
                "receiver_role": {
                    "type": "integer"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "model.InputCreateScheduleWork": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "string"
                },
                "time_slot": {
                    "type": "string"
                }
            }
        },
        "model.InputEndCall": {
            "type": "object",
            "properties": {
                "call_id": {
                    "type": "string"
                }
            }
        },
        "model.InputExtendCall": {
            "type": "object",
            "properties": {
                "call_id": {
                    "type": "string"
                }
            }
        },
        "model.InputForgotPassword": {
            "type": "object",
            "properties": {
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "model.InputHandleMissCall": {
            "type": "object",
            "properties": {
                "call_id": {
                    "type": "string"
                }
            }
        },
        "model.InputJoinCall": {
            "type": "object",
            "properties": {
                "call_id": {
                    "type": "string"
                }
            }
        },
        "model.InputLogin": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "model.InputOrderPayment": {
            "type": "object",
            "properties": {
                "booking_time": {
                    "type": "string"
                },
                "coupon_id": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "listener_id": {
                    "type": "string"
                },
                "time_slot": {
                    "type": "string"
                }
            }
        },
        "model.InputPaymentRefund": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "model.InputReadNotification": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "read_all": {
                    "type": "boolean"
                }
            }
        },
        "model.InputRequestWithdrawal": {
            "type": "object",
            "properties": {
                "money": {
                    "type": "integer"
                }
            }
        },
        "model.InputResetNewPassword": {
            "type": "object",
            "properties": {
                "new_password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "reset_code": {
                    "type": "string"
                }
            }
        },
        "model.InputSendEventWebSocket": {
            "type": "object",
            "properties": {
                "event": {
                    "type": "string"
                },
                "from_user_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.InputSendOTPCode": {
            "type": "object",
            "properties": {
                "phone_number": {
                    "type": "string",
                    "example": "0335266678"
                }
            }
        },
        "model.InputStartCall": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "string"
                }
            }
        },
        "model.InputSubmitCallEvaluation": {
            "type": "object",
            "properties": {
                "call_id": {
                    "type": "string"
                },
                "note_company": {
                    "type": "string"
                },
                "note_listener": {
                    "type": "string"
                },
                "star": {
                    "type": "integer"
                },
                "tip": {
                    "type": "integer"
                }
            }
        },
        "model.InputSubmitDiamond": {
            "type": "object",
            "properties": {
                "diamond": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "model.InputSubmitInfoConversation": {
            "type": "object",
            "properties": {
                "call_id": {
                    "type": "string"
                },
                "consulting_field": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "content": {
                    "type": "string"
                },
                "end_call": {
                    "type": "string"
                },
                "start_call": {
                    "type": "string"
                }
            }
        },
        "model.InputSwitchListener": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "string"
                }
            }
        },
        "model.InputToken": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "model.InputTrackActionListener": {
            "type": "object",
            "properties": {
                "action": {
                    "description": "CHECK_IN, CHECK_OUT, ON_CALL, OFF_CALL",
                    "type": "string"
                }
            }
        },
        "model.InputUnlock": {
            "type": "object",
            "properties": {
                "booking_time": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "listener_id": {
                    "type": "string"
                }
            }
        },
        "model.InputUpdateInfo": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "consulting_fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.InputUpdateOrderPayment": {
            "type": "object",
            "properties": {
                "booking_time": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "listener_id": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "surcharge": {
                    "type": "integer"
                },
                "time_slot": {
                    "type": "string"
                }
            }
        },
        "model.InputVerifyOTPCode": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "462384"
                },
                "phone_number": {
                    "type": "string",
                    "example": "0335266678"
                }
            }
        },
        "model.InputVerifyResetPassword": {
            "type": "object",
            "properties": {
                "phone_number": {
                    "type": "string"
                },
                "reset_code": {
                    "type": "string"
                }
            }
        },
        "model.Listener": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "bank": {
                    "$ref": "#/definitions/model.Bank"
                },
                "count_login_fail": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_flag": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "dob": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "main_topic": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "$ref": "#/definitions/model.Name"
                },
                "password": {
                    "type": "string"
                },
                "personal_id": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "refresh_token": {
                    "type": "string"
                },
                "role": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.LoginData": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "model.Message": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "notification": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "model.Name": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                }
            }
        },
        "model.ResponseAppointmentSchedule": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DataAppointmentSchedule"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.ResponseDetailAppointmentSchedule": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "$ref": "#/definitions/model.DataDetailAppointmentSchedule"
                },
                "message": {
                    "type": "string",
                    "example": "Success"
                }
            }
        },
        "model.ResponseError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.ResponseGetAllUsers": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GetAllUsersData"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Success"
                }
            }
        },
        "model.ResponseGetAllWithdrawalHistory": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GetAllWithdrawalHistoryData"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Success"
                }
            }
        },
        "model.ResponseGetCallHistoryListener": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DataGetCallHistoryListener"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.ResponseGetCallHistoryUser": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DataGetCallHistoryUser"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.ResponseGetConfigData": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "$ref": "#/definitions/model.ConfigData"
                },
                "message": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "model.ResponseGetConsultingField": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ConsultingField"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "model.ResponseGetConversationsUser": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DataConversationsUser"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.ResponseGetCouponsUser": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DataGetCouponsUser"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Success"
                }
            }
        },
        "model.ResponseGetDetailCallHistoryListener": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "$ref": "#/definitions/model.DataGetCallHistoryListener"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.ResponseGetDetailConversationUser": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "$ref": "#/definitions/model.DataDetailConversationUser"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.ResponseGetDetailScheduleWorkListener": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[00:30",
                        "01:00]"
                    ]
                },
                "message": {
                    "type": "string",
                    "example": "Success"
                }
            }
        },
        "model.ResponseGetInfoListener": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "$ref": "#/definitions/model.Listener"
                },
                "message": {
                    "type": "string",
                    "example": "Success"
                }
            }
        },
        "model.ResponseGetListNotification": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DataGetListNotification"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "model.ResponseGetListenerForBookAppointment": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DataListenerInfo"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Success"
                }
            }
        },
        "model.ResponseGetListenersBookmark": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DataGetListenersBookmark"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Success"
                }
            }
        },
        "model.ResponseGetScheduleWorkAppointment": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DataDetailAppointmentInDay"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Success"
                }
            }
        },
        "model.ResponseGetServerDatetime": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "string"
                },
                "message": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "model.ResponseGetTimeSlot": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TimeSlot"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "model.ResponseGetWithdrawalHistory": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.WithdrawalHistory"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Success"
                }
            }
        },
        "model.ResponseLogin": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "$ref": "#/definitions/model.LoginData"
                },
                "message": {
                    "type": "string",
                    "example": "Success"
                }
            }
        },
        "model.ResponseScheduleWork": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DataScheduleWork"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Success"
                }
            }
        },
        "model.ResponseSendOTPCode": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "string",
                    "example": "457564"
                },
                "message": {
                    "type": "string",
                    "example": "Success"
                }
            }
        },
        "model.ResponseStartConversation": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "$ref": "#/definitions/model.DataStartConversation"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.ResponseSuccess": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.ResponseVerifyOTPCode": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "is_member": {
                    "type": "boolean"
                },
                "phone_number": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "model.ResponseWorkingDay": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DataWorkingDay"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Success"
                }
            }
        },
        "model.TimeSlot": {
            "type": "object",
            "properties": {
                "booking_time": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "surcharge": {
                    "type": "number"
                },
                "time_slot": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.WithdrawalHistory": {
            "type": "object",
            "properties": {
                "amount_money": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "listener_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "Tài liệu đặc tả api.sandexcare.com",
	Description: "Có mặt trên tất cả nền tảng kỹ thuật số hàng đầu như Google Play, iOS, website. SandexCare là ứng dụng dịch vụ hỗ trợ khách hàng giải tỏa những khó khăn trong cuộc sống qua cuộc gọi 1-1 với chuyên viên lắng nghe của SandexCare, đem lại cảm hứng và động lực trong cuộc sống - công ty hàng đầu về sức khỏe tâm lý cộng đồng tại Việt Nam.\nSandexCare sẽ luôn bên bạn mọi lúc khi bạn cần nhất và hãy đến với chúng tôi để cùng nhau lan toả năng lượng tích cực cho cuộc sống để những vấn đề của chính bạn trở nên đơn giản hơn.\n\nFormat date: \"2022-01-04\".\nFormat time_slot: \"00:00-06:00\".\nFormat booking_time: \"01:00\".",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
